var x =
{
    _readableState: {
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
    },
    readable: true,
    domain: null,
    _events: {},
    _maxListeners: 10,
    socket: {
        _connecting: false,
        _handle: {
            fd: 11,
            writeQueueSize: 0,
            owner: [Circular],
            onread: [Function.onread],
            reading: true
        },
        _readableState: {
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: false,
            ended: false,
            endEmitted: false,
            reading: true,
            calledRead: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            objectMode: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: true,
        domain: null,
        _events: {
            end: [Object],
            finish: [Function.onSocketFinish],
            _socketEnd: [Function.onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Function],
            close: [Object]
        },
        _maxListeners: 10,
        _writableState: {
            highWaterMark: 16384,
            objectMode: false,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            sync: true,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            buffer: [],
            errorEmitted: false
        },
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 578,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: {
            domain: null,
            _events: [Object],
            _maxListeners: 10,
            _connections: 1,
            connections: [Getter / Setter],
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            allowHalfOpen: true,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _connectionKey: '4:0.0.0.0:3000'
        },
        _idleTimeout: 120000,
        _idleNext: {_idleNext: [Circular], _idlePrev: [Circular]},
        _idlePrev: {_idleNext: [Circular], _idlePrev: [Circular]},
        _idleStart: 1433758094273,
        _monotonicStartTime: 143536740,
        parser: {
            _headers: [],
            _url: '',
            onHeaders: [Function.parserOnHeaders],
            onHeadersComplete: [Function.parserOnHeadersComplete],
            onBody: [Function.parserOnBody],
            onMessageComplete: [Function.parserOnMessageComplete],
            socket: [Circular],
            incoming: [Circular],
            maxHeaderPairs: 2000,
            onIncoming: [Function]
        },
        ondata: [Function],
        _paused: false,
        _httpMessage: {
            domain: null,
            _events: [Object],
            _maxListeners: 10,
            output: [],
            outputEncodings: [],
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _headerSent: false,
            _header: '',
            _hasBody: true,
            _trailer: '',
            finished: false,
            _hangupClose: false,
            socket: [Circular],
            connection: [Circular],
            _headers: [Object],
            _headerNames: [Object],
            req: [Circular],
            locals: [Function.locals]
        }
    },
    connection: {
        _connecting: false,
        _handle: {
            fd: 11,
            writeQueueSize: 0,
            owner: [Circular],
            onread: [Function.onread],
            reading: true
        },
        _readableState: {
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: false,
            ended: false,
            endEmitted: false,
            reading: true,
            calledRead: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            objectMode: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: true,
        domain: null,
        _events: {
            end: [Object],
            finish: [Function.onSocketFinish],
            _socketEnd: [Function.onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Function],
            close: [Object]
        },
        _maxListeners: 10,
        _writableState: {
            highWaterMark: 16384,
            objectMode: false,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            sync: true,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            buffer: [],
            errorEmitted: false
        },
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 578,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: {
            domain: null,
            _events: [Object],
            _maxListeners: 10,
            _connections: 1,
            connections: [Getter / Setter],
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            allowHalfOpen: true,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _connectionKey: '4:0.0.0.0:3000'
        },
        _idleTimeout: 120000,
        _idleNext: {_idleNext: [Circular], _idlePrev: [Circular]},
        _idlePrev: {_idleNext: [Circular], _idlePrev: [Circular]},
        _idleStart: 1433758094273,
        _monotonicStartTime: 143536740,
        parser: {
            _headers: [],
            _url: '',
            onHeaders: [Function.parserOnHeaders],
            onHeadersComplete: [Function.parserOnHeadersComplete],
            onBody: [Function.parserOnBody],
            onMessageComplete: [Function.parserOnMessageComplete],
            socket: [Circular],
            incoming: [Circular],
            maxHeaderPairs: 2000,
            onIncoming: [Function]
        },
        ondata: [Function],
        _paused: false,
        _httpMessage: {
            domain: null,
            _events: [Object],
            _maxListeners: 10,
            output: [],
            outputEncodings: [],
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _headerSent: false,
            _header: '',
            _hasBody: true,
            _trailer: '',
            finished: false,
            _hangupClose: false,
            socket: [Circular],
            connection: [Circular],
            _headers: [Object],
            _headerNames: [Object],
            req: [Circular],
            locals: [Function.locals]
        }
    },
    httpVersion: '1.1',
    complete: false,
    headers: {
        host: 'tbao.tv:3000',
        connection: 'keep-alive',
        'content-length': '12150',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        origin: 'http://tbao.tv:3000',
        'x-requested-with': 'ShockwaveFlash/17.0.0.176',
        'user-agent': 'Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2383.0 Safari/537.36',
        'content-type': 'application/octet-stream',
        accept: '*/*',
        referer: 'http://tbao.tv:3000/static/FaustCplus.swf',
        'accept-encoding': 'gzip, deflate',
        'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6',
        'ra-ver': '2.10.4',
        'ra-sid': '7B95DC0F-20141009-121045-1b3384-0c70bf'
    },
    trailers: {},
    _pendings: [],
    _pendingIndex: 0,
    url: '/upload',
    method: 'POST',
    statusCode: null,
    client: {
        _connecting: false,
        _handle: {
            fd: 11,
            writeQueueSize: 0,
            owner: [Circular],
            onread: [Function.onread],
            reading: true
        },
        _readableState: {
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: false,
            ended: false,
            endEmitted: false,
            reading: true,
            calledRead: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            objectMode: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: true,
        domain: null,
        _events: {
            end: [Object],
            finish: [Function.onSocketFinish],
            _socketEnd: [Function.onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Function],
            close: [Object]
        },
        _maxListeners: 10,
        _writableState: {
            highWaterMark: 16384,
            objectMode: false,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            sync: true,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            buffer: [],
            errorEmitted: false
        },
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 578,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: {
            domain: null,
            _events: [Object],
            _maxListeners: 10,
            _connections: 1,
            connections: [Getter / Setter],
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            allowHalfOpen: true,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _connectionKey: '4:0.0.0.0:3000'
        },
        _idleTimeout: 120000,
        _idleNext: {_idleNext: [Circular], _idlePrev: [Circular]},
        _idlePrev: {_idleNext: [Circular], _idlePrev: [Circular]},
        _idleStart: 1433758094273,
        _monotonicStartTime: 143536740,
        parser: {
            _headers: [],
            _url: '',
            onHeaders: [Function.parserOnHeaders],
            onHeadersComplete: [Function.parserOnHeadersComplete],
            onBody: [Function.parserOnBody],
            onMessageComplete: [Function.parserOnMessageComplete],
            socket: [Circular],
            incoming: [Circular],
            maxHeaderPairs: 2000,
            onIncoming: [Function]
        },
        ondata: [Function],
        _paused: false,
        _httpMessage: {
            domain: null,
            _events: [Object],
            _maxListeners: 10,
            output: [],
            outputEncodings: [],
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _headerSent: false,
            _header: '',
            _hasBody: true,
            _trailer: '',
            finished: false,
            _hangupClose: false,
            socket: [Circular],
            connection: [Circular],
            _headers: [Object],
            _headerNames: [Object],
            req: [Circular],
            locals: [Function.locals]
        }
    },
    _consuming: false,
    _dumped: false,
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    upgrade: false,
    originalUrl: '/upload',
    _parsedUrl: {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/upload',
        path: '/upload',
        href: '/upload'
    },
    query: {},
    res: {
        domain: null,
        _events: {finish: [Function]},
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: {
            _connecting: false,
            _handle: [Object],
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _maxListeners: 10,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            onend: [Function],
            destroyed: false,
            bytesRead: 578,
            _bytesDispatched: 0,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Object],
            _idleStart: 1433758094273,
            _monotonicStartTime: 143536740,
            parser: [Object],
            ondata: [Function],
            _paused: false,
            _httpMessage: [Circular]
        },
        connection: {
            _connecting: false,
            _handle: [Object],
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _maxListeners: 10,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            onend: [Function],
            destroyed: false,
            bytesRead: 578,
            _bytesDispatched: 0,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Object],
            _idleStart: 1433758094273,
            _monotonicStartTime: 143536740,
            parser: [Object],
            ondata: [Function],
            _paused: false,
            _httpMessage: [Circular]
        },
        _headers: {'x-powered-by': 'Express'},
        _headerNames: {'x-powered-by': 'X-Powered-By'},
        req: [Circular],
        locals: [Function.locals]
    },
    next: [Function.next],
    _route_index: 0,
    route: {
        path: '/upload',
        method: 'post',
        callbacks: [[Function]],
        keys: [],
        regexp: /^\/upload\/?$/i,
        params: []
    },
    params: []
}